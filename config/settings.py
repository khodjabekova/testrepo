"""
Django settings for config project.

Generated by 'django-admin startproject' using Django 4.0.3.

For more information on this file, see
https://docs.djangoproject.com/en/4.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.0/ref/settings/
"""
import os
from pathlib import Path
import django.conf.locale
from datetime import timedelta
import django.conf.locale
from django.utils.translation import gettext_noop
import os
import environ

env = environ.Env()
environ.Env.read_env()
# Build paths inside the project like this: BASE_DIR / 'subdir'.
from django.utils.translation import gettext_lazy, gettext_noop

BASE_DIR = Path(__file__).resolve().parent.parent

import environ

env = environ.Env()
environ.Env.read_env()

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-o(*m3u1h+(8zpka%coig6$38$_ij9(6$+182q6_-0g1ff&c!_%'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

os.environ['DJANGO_SETTINGS_MODULE'] = 'config.settings'

AUTH_USER_MODEL = 'accounts.CustomUser'

# Application definition

INSTALLED_APPS = [
    'jazzmin',
    'corsheaders',
    'modeltranslation',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.postgres',
    'rest_framework',
    'rest_framework_simplejwt',
    'config',
    'django_filters',
    'drf_yasg',
    'django_summernote',
    'mptt',
    'tinymce',
    'imagekit',
    'slugify',
    'about',
    'accounts',
    'baseapp',
    'department',
    'useful_link',
    'menu',
    'vacancy',
    'internship',
    'opendata',
    'gallery',
    'equipments',
    'post',
    'contact',
    'faq',
    'statisticsapp',
    'event',
    'internshipcosts',
]

MIDDLEWARE = [
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'config.default_language.ForceDefaultLanguageMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'django.middleware.locale.LocaleMiddleware'
]

ROOT_URLCONF = 'config.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        # 'DIRS': [],
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'config.wsgi.application'

REST_FRAMEWORK = {
    'DEFAULT_FILTER_BACKENDS': (
        'django_filters.rest_framework.DjangoFilterBackend',
    ),
    'DEFAULT_AUTHENTICATION_CLASSES': [
        'config.authenticate.CustomAuthentication'
    ],
}

# Database
# https://docs.djangoproject.com/en/4.0/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': env('DATABASE_NAME'),
        'USER': env('DATABASE_USER'),
        'PASSWORD': env('DATABASE_PASS'),
        'HOST': 'localhost',
        'PORT': '5432',
    }
}

# Password validation
# https://docs.djangoproject.com/en/4.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Internationalization
# https://docs.djangoproject.com/en/4.0/topics/i18n/

LANGUAGE_CODE = 'uz'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True

LANGUAGES = [
    ('uz', gettext_noop('Uzbek')),
    ('uzb', gettext_noop('uz_Cyrl')),
    ('ru', gettext_noop('Russian')),
    ('en', gettext_noop('English')),
]

EXTRA_LANG_INFO = {
    'uzb': {
        'bidi': False,  # right-to-left
        'code': 'uzb',
        'name': 'uz_Cyrl',
        'name_local': "Ўзбек",
    },
}

LANG_INFO = dict(django.conf.locale.LANG_INFO, **EXTRA_LANG_INFO)
django.conf.locale.LANG_INFO = LANG_INFO

MODELTRANSLATION_DEFAULT_LANGUAGE = 'uz'
MODELTRANSLATION_TRANSLATION_REGISTRY = 'config.translation'

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.0/howto/static-files/

STATIC_URL = '/static/'
STATIC_ROOT = os.path.join(BASE_DIR, 'static')

MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')

# Default primary key field type
# https://docs.djangoproject.com/en/4.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
ALLOWED_HOSTS = ['*']
# ALLOWED_HOSTS = ['0.0.0.0', '127.0.0.1', "192.168.1.114",'localhost', 'back.innofund.technocorp.uz']
# CORS_ORIGIN_ALLOW_ALL = True
CORS_ALLOWED_ORIGINS = [
    "https://back.innofund.technocorp.uz",
    "https://innofund.technocorp.uz",
    "http://localhost:3000",
    "http://192.168.1.78:3000",
]

CSRF_TRUSTED_ORIGINS = [
    "https://back.innofund.technocorp.uz",
    "https://innofund.technocorp.uz",
    "http://localhost:3000",
    "http://192.168.1.78:3000",
]

CORS_ALLOW_CREDENTIALS = True

CORS_ALLOW_METHODS = [
    'DELETE',
    'GET',
    'OPTIONS',
    'PATCH',
    'POST',
    'PUT',
]

CORS_ALLOW_HEADERS = [
    'accept',
    'accept-encoding',
    'authorization',
    'authorizations',
    'content-type',
    'dnt',
    'origin',
    'user-agent',
    'x-csrftoken',
    'x-requested-with',
]

LOGIN_REDIRECT_URL = '/'
CORS_EXPOSE_HEADERS = ['Content-Type', 'X-CSRFToken', 'Access-Control-Allow-Origin']
SECURE_BROWSER_XSS_FILTER = True

from datetime import timedelta

SIMPLE_JWT = {
    'ACCESS_TOKEN_LIFETIME': timedelta(minutes=30),
    'REFRESH_TOKEN_LIFETIME': timedelta(days=7),
    'ROTATE_REFRESH_TOKENS': False,
    'BLACKLIST_AFTER_ROTATION': True,
    'UPDATE_LAST_LOGIN': False,

    'ALGORITHM': 'HS256',
    'SIGNING_KEY': 'SecretadliyaKey123',
    'VERIFYING_KEY': None,
    'AUDIENCE': None,
    'ISSUER': None,

    'AUTH_HEADER_TYPES': ('Bearer',),
    'AUTH_HEADER_NAME': 'HTTP_AUTHORIZATION',
    'USER_ID_FIELD': 'id',
    'USER_ID_CLAIM': 'user_id',
    'USER_AUTHENTICATION_RULE': 'rest_framework_simplejwt.authentication.default_user_authentication_rule',

    'AUTH_TOKEN_CLASSES': ('rest_framework_simplejwt.tokens.AccessToken',),
    'TOKEN_TYPE_CLAIM': 'token_type',

    'JTI_CLAIM': 'jti',

    'SLIDING_TOKEN_REFRESH_EXP_CLAIM': 'refresh_exp',
    'SLIDING_TOKEN_LIFETIME': timedelta(minutes=30),
    'SLIDING_TOKEN_REFRESH_LIFETIME': timedelta(days=1),

    # custom
    # Cookie name. Enables cookies if value is set.
    'AUTH_COOKIE': 'access_token',
    # A string like "example.com", or None for standard domain cookie.
    'AUTH_COOKIE_DOMAIN': 'back.innofund.technocorp.uz',
    # Whether the auth cookies should be secure (https:// only).
    'AUTH_COOKIE_SECURE': True,
    # 'AUTH_COOKIE_SECURE': False,
    # Http only cookie flag.It's not fetch by javascript.
    'AUTH_COOKIE_HTTP_ONLY': True,
    # 'AUTH_COOKIE_HTTP_ONLY': False,
    'AUTH_COOKIE_PATH': '/',  # The path of the auth cookie.
    # Whether to set the flag restricting cookie leaks on cross-site requests. This can be 'Lax', 'Strict', or None to disable the flag.
    'AUTH_COOKIE_SAMESITE': 'None',
    'AUTH_COOKIE_REFRESH': 'refresh_token',
}

USE_X_FORWARDED_HOST = True
SECURE_PROXY_SSL_HEADER = ('HTTP_X_FORWARDED_PROTO', 'https')

JAZZMIN_SETTINGS = {
    "site_title": "InnoFund",
    "site_header": "InnoFund",
    "site_brand": "InnoFund",

    "order_with_respect_to": ['accounts', 
                                "auth",
                                'menu', 'about', 'post', 'department',
                              'internship', 
                              'internshipcosts', 
                              'internshipcosts.internuser',
                              'internshipcosts.internshipcostsinfo',
                               'internshipcosts.internshipexpenses',
                               'internshipcosts.financialreport',
                               'equipments.equipment', 
                               'equipments.type', 
                               'contact', 'event', 'vacancy', 'opendata', 
                               'useful_link', 'gallery', 'faq', 
                               'statisticsapp.country',  
                               'statisticsapp.region',  
                               'statisticsapp.interncount',  
                               'statisticsapp.sciencefield',  
                               'statisticsapp.scientificinternship',  
                               'statisticsapp.financeinternshipyear',  
                               'statisticsapp.annualcost',  
                               'statisticsapp.equipmentpurchasestatistics',  
                               'statisticsapp.financeentity',  
                               'statisticsapp.regionsight', 
                               'statisticsapp.appealstatistics',  
                               'statisticsapp.appealquarterstatistics',  
                               'statisticsapp.normativedocument',  
                               'statisticsapp.youngscientistinternship',  


                              ],

    "icons": {
        "about.about": "fas fa-info-circle",
        "auth.Group": "fas fa-users",
        "accounts.customuser": "fas fa-user",
        "event.event": "fas fa-solid fa-calendar-alt",
        "event.eventtype": "fas fa-list",
        "event.eventimages": "fas fa-list",
        "gallery.photogallery": "fas fa-images",
        "gallery.videogallery": "fas fa-video",
        "menu.menu": "fas fa-list",
        "useful_link.usefullink": "fas fa-link",
        "vacancy.vacancy": "fas fa-user-plus",
        "department.department": "fas fa-building",
        "department.supervisoryboard": "fas fa-user-tie",
        "department.employee": "fas fa-users",
        "opendata.opendata": "far fa-folder-open",
        "equipments.type": "fas fa-tools",
        "equipments.equipment": "fas fa-microscope",
        "post.post": "fas fa-newspaper",
        "post.tags": "fas fa-tags",
        "contact.contact": "fas fa-id-card",
        "faq.faq": "fas fa-question",
        "statisticsapp.country": "fas fa-globe",
        "statisticsapp.region": "fas fa-map-pin",
        "statisticsapp.scientificinternship": "fas fa-business-time",
        "statisticsapp.financeinternshipyear": "fas fa-graduation-cap",
        "statisticsapp.financeentity": "fas fa-tools",
        "statisticsapp.interncount": "fas fa-people-arrows",
        "statisticsapp.normativedocument": "fas fa-file",
        "statisticsapp.regionsight": "fas fa-map-marked",
        "statisticsapp.appealstatistics": "fas fa-chart-area",
        "statisticsapp.appealquarterstatistics": "fas fa-chart-pie",
        "statisticsapp.annualcost": "fas fa-donate",
        "statisticsapp.youngscientistinternship": "fas fa-chart-line",
        "statisticsapp.sciencefield": "fab fa-connectdevelop",
        "statisticsapp.equipmentpurchasestatistics": "fas fa-microscope",
        "internship.intern": "fas fa-user-graduate",
        "internshipcosts.internuser": "fas fa-address-card",
        'internshipcosts.internshipcostsinfo': "fas fa-file-word",
        "internshipcosts.internshipexpenses": "fas fa-file-invoice",
        "internshipcosts.financialreport": "fas fa-file-invoice",
        "internshipcosts.coststatementtype": "fas fa-list",
    },
}

TINYMCE_JS_ROOT = os.path.join(STATIC_ROOT, "tinymce")
# TINYMCE_JS_URL = 'http://debug.example.org/tiny_mce/tiny_mce_src.js'
TINYMCE_DEFAULT_CONFIG = {
    "height": "320px",
    "width": "100%",
    "menubar": "file edit view insert format tools table help",
    "plugins": "advlist autolink lists link image imagetools charmap print preview anchor searchreplace visualblocks code "
               "fullscreen insertdatetime media table paste code help wordcount spellchecker",
    "toolbar": "undo redo | bold italic underline strikethrough | image | fontselect fontsizeselect formatselect | alignleft "
               "aligncenter alignright alignjustify | outdent indent |  numlist bullist checklist | forecolor "
               "backcolor casechange permanentpen formatpainter removeformat | pagebreak | charmap emoticons | "
               "fullscreen  preview save print | insertfile image media pageembed template link anchor codesample | "
               "a11ycheck ltr rtl | showcomments addcomment code",
    "custom_undo_redo_levels": 10,
    'images_upload_url': '/upload_image/',
    'relative_urls': False,
    'remove_script_host': False,
    'convert_urls': True,
    'fontsize_formats': "8px 9px 10px 11px 12px 14px 16px 18px 24px 30px 36px 48px 60px 72px 96px"
}
SUMMERNOTE_CONFIG = {

    'summernote': {
        'width': '100%',
    },

    # Set to `True` to return attachment paths in absolute URIs.
    'attachment_absolute_uri': True,
    'summernote': {
        'fontSizes': ['8', '9', '10', '11', '12', '14', '16', '18', '20', '22', '24', '26', '28', '30', '32', '34',
                      '36'],
    },

    'attachment_filesize_limit': 3000000
}

DOMAIN = 'back.innofund.technocorp.uz'
# BACK_URL = 'https://back.innofund.technocorp.uz'
# FRONT_URL = 'https://innofund.technocorp.uz'

BACK_URL = 'http://localhost:8000'
FRONT_URL = 'http://localhost:8000'


EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'smtp.gmail.com'
EMAIL_USE_TLS = True
EMAIL_PORT = 587
EMAIL_HOST_USER = 'technocorp.kh@gmail.com'
EMAIL_HOST_PASSWORD = 'h1UdtuRYiSulOzIi'

# internship@innofund.uz
# stajirovka123

# Mail.innofund.uz
# murojaat@innofund.uz
# 2022#fond
